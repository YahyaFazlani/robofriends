{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","lazy","CardList","robots","CardComponent","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","height","App","onSearchChange","event","setState","target","value","state","axios","get","users","data","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,uCCOCQ,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAKL,EAAMM,MAAI,IAC/D,gCACE,6BAAKN,IACL,4BAAIC,WCQGM,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CAEEV,GAAIM,EAAOI,GAAGV,GACdF,KAAMQ,EAAOI,GAAGZ,KAChBC,MAAOO,EAAOI,GAAGX,OAHZW,MAOX,OAAO,sBAAMT,UAAU,MAAhB,SAAuBM,KCAjBI,MAbf,YAAkD,EAA7BC,YAA8B,IAAjBC,EAAgB,EAAhBA,aAChC,OACE,qBAAKZ,UAAU,OAAf,SACE,uBACEa,KAAK,SACLb,UAAU,mCACVc,YAAY,gBACZC,SAAUH,OCHHI,EAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,SAA1C,SAAqDH,K,yBC4C/CI,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEb,YAAaY,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBiB,IAAMC,IAAI,8CAA8CvC,MAAK,SAACwC,GAC5D,EAAKN,SAAS,CAAEnB,OAAQyB,EAAMC,Y,oBAQlC,WAAU,IAAD,EACyBC,KAAKL,MAA7BtB,EADD,EACCA,OAAQM,EADT,EACSA,YACVsB,EAAiB5B,EAAO6B,QAAO,SAACC,GACpC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS1B,EAAYyB,kBAEvD,OAAQ/B,EAAOiC,OAGb,sBAAKtC,UAAU,KAAKkB,MAAO,CAAEC,UAAW,UAAxC,UACE,oBAAInB,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWY,aAAcoB,KAAKV,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUjB,OAAQ4B,SANtB,oBAAIjC,UAAU,YAAd,4B,GAzBYuC,a,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.801f8488.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${id}?200x200`} alt={name} lazy />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from './Card';\n\nconst CardList = ({ robots }) => {\n  const CardComponent = robots.map((user, i) => {\n    return (\n      <Card\n        key={i}\n        id={robots[i].id}\n        name={robots[i].name}\n        email={robots[i].email}\n      />\n    );\n  });\n  return <main className=\"pa3\">{CardComponent}</main>;\n}\n\nexport default CardList;\n","function SearchBox({ searchfield, searchChange }) {\n  return (\n    <div className=\"pa2 \">\n      <input\n        type=\"search\"\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        placeholder=\"Search Robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n}\n\nexport default SearchBox;\n","const Scroll = ({ children }) => {\n  return <div style={{overflowY: 'scroll', height: '560px'}}>{children}</div>;\n};\n\nexport default Scroll;\n","import { Component } from 'react';\nimport CardList from './components/CardList';\nimport SearchBox from './components/SearchBox';\nimport Scroll from './components/Scroll';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then((users) => {\n      this.setState({ robots: users.data });\n    });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const { robots, searchfield } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n    return !robots.length ? (\n      <h1 className=\"tc center\">Loading...</h1>\n    ) : (\n      <div className=\"tc\" style={{ overflowY: 'hidden' }}>\n        <h1 className=\"f2\">Robofriends</h1>\n        <SearchBox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\"\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}